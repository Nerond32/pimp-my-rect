@import 'assets/variables.scss';

@mixin smallMobileLayout {
  grid-template-areas:
    'header'
    '.'
    'output'
    '.'
    'input'
    '.'
    'gallery';
}

@mixin largeMobileLayout {
  grid-template-areas:
    'input . header'
    'input . .'
    'input . output'
    '. . .'
    'gallery gallery gallery';
}

@mixin desktopLayout {
  grid-template-areas:
    'header . gallery'
    '. . gallery'
    'output . gallery'
    '. . gallery'
    'input . gallery';
}

html,
body,
#root,
.app {
  background-color: $background;
  color: $fontColor;
  font-family: 'Verdana';
  font-size: 16px;
  height: 100vh;
  margin: 0 auto;
  padding: 0;
}

.app {
  .editor-input {
    grid-area: input;
  }
  .editor-preview {
    grid-area: output;
  }
  .gallery {
    grid-area: gallery;
  }
  .pmr-main-header {
    grid-area: header;
  }
  display: grid;
  grid: 4em 1em 1fr 1em 1fr / minmax($editorWidth, 1fr) 1em 2fr;
  @include desktopLayout;
  @media only screen and (max-width: $mobileSize) {
    grid: 4em 1em 1fr 1em 1fr 1em 1fr / 1fr;
    @include smallMobileLayout;
  }
  @media only screen and (min-width: $minLandscapeViewWidth) and (max-width: $tabletSize) and (orientation: landscape) {
    grid: 4em 1em minmax(calc(100vh - 6em), 1fr) 1em 1fr / 1fr 1em 1fr;
    @include largeMobileLayout;
  }
  @media only screen and (min-width: $minLandscapeViewWidth) and (max-width: $tabletSize) and (orientation: portrait) {
    grid: 4em 1em 1fr 1em 1fr / 1fr 1em 1fr;
    @include largeMobileLayout;
  }
}
